@*@model IEnumerable<Controlprocesos.Model.ODP>*@
@model PagedList.IPagedList<Controlprocesos.Model.ODP>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Ordenes de producion</h2>



@if (User.IsInRole("Manager"))
{
    <p>

        @Html.ActionLink("Crear nueva Orden", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })

    </p>
    @*@Html.ActionLink("Create New", "Create")*@
}
@using (Html.BeginForm())
{
    <form class="form-inline">

        <div class="form-group mx-sm-3 mb-2">
            Filtrar por numero de Orden: @Html.TextBox("searchString", null, htmlAttributes: new { @class = "form-control-plaintext" })
            <button type="submit" class="btn">Buscar</button>
    </form>
    <br />
    <br />
}

<table class="table">
    <tr>
        <th>
            Cliente
            @*@Html.DisplayNameFor(model => model.Client.Name)*@
        </th>
        <th>
            @Html.ActionLink("Numero de Orden", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.NODP)*@
        </th>
        <th>
            Titulo
            @*@Html.DisplayNameFor(model => model.Title)*@
        </th>
        <th>
            Notas
            @*@Html.DisplayNameFor(model => model.Notes)*@
        </th>
        <th>
            Fecha de creación
            @*@Html.DisplayNameFor(model => model.CreatedDate)*@
        </th>
        <th>
            Fecha Requerida
            @*@Html.DisplayNameFor(model => model.DueDate)*@
        </th>
        <th>
            Fecha fin
            @*@Html.DisplayNameFor(model => model.FinishedDate)*@
        </th>
        <th>
            Documento
            @*@Html.DisplayNameFor(model => model.PDFFile)*@
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Client.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NODP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinishedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PDFFile)
            </td>
            <td>
                @if (User.IsInRole("Manager"))
                {
                    @Html.ActionLink("Editar | ", "Edit", new { id = item.Id })

                    @Html.ActionLink("Eliminar | ", "Delete", new { id = item.Id })
                }

                @Html.ActionLink("Detalles", "Details", new { id = item.Id })
                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

